SETUP

These instructions refer to the Raspberry Pi and your web server as two
different computers, but they can be one in the same if you want.

Don't forget, for future reference, that to run any of the Python scripts
(juiceinformant.py, hwmon.py, push.py), you must first be in the
"juiceinformant" directory.

If you want to use a virtualenv (you'll know if this is you), go ahead.

On your RPi, install libraries:

$ sudo apt-get install python-smbus
$ pip install -r requirements.txt

Setup i2c on the RPi:

https://learn.adafruit.com/adafruits-raspberry-pi-lesson-4-gpio-setup/configuring-i2c

Now create a file in this project directory, called "secret", and type some
gibberish into it. This is the password that prevents anyone from submitting
bogus data to your server.

*If* you have a separate web server, copy the project to that server, and
install libraries on it:

$ rsync -va ./ user@server:juiceinformant/
$ ssh user@webserverhost
$ pip install -r requirements.txt

Now install redis on the web server and start it up.

$ sudo apt-get install redis-server

Start up the Flask server script on the web server:

$ python juiceinformant.py

This will run on port 5000 by default. Edit the "app.run" line at the end of
juiceinformant.py to change this.

Back on the RPi, start up the hardware monitoring script:

$ python hwmon.py

This is now logging to a file called blink-log. The other script to run on the
RPi will read from this log file and continually try to send updates to the
web server:

$ tail -n1000000000 -f blink-log | python push.py localhost:5000

It should say stuff like this:

Sent batch[1]: 1381518599.379515...1381518599.379515

It may also complain with error messages if it can't connect, or the server is
giving it an unexpected response, etc. You can just leave it running and it'll
recover once the problems are resolved.

You can delete and re-build the Redis database trivially; just run "redis-cli
flushdb" on the web server to delete it, restart push.py afterwards and it'll
push all the old log data to repopulate Redis. However, the blink-log file is
irreplaceable. It is the canonical place where the log data lives. If you want
to have a backup of your data, then backup blink-log regularly.

EXERCISES LEFT FOR THE READER

You will want to set up all of these scripts to run at boot.

The log file will grow up to maybe a hundred MB per year depending on your
electricity usage. After a long time it might become a disk space hog,
depending on how much space you have available. (The Redis instance on the
remote server doesn't grow appreciably after the first week, as it only retains
a very compact summary of daily use past 7 days.)
